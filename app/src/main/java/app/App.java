/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package app;

import java.net.InetSocketAddress;

import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletHandler;

import com.sun.net.httpserver.HttpServer;

import io.prometheus.client.*;import io.prometheus.client.Counter;
import io.prometheus.client.exporter.MetricsServlet;
import io.prometheus.client.hotspot.DefaultExports;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHolder;
import java.io.IOException;


public class App {
    public String startupMessage() {
        return "App has started!";
    }

    public static void main(String[] args) throws Exception {
        System.out.println(new App().startupMessage());

        Server server = new Server(8082);
      ServletContextHandler context = new ServletContextHandler();
      context.setContextPath("/");
      server.setHandler(context);

      // server routes

      // 'health' for health-check
      context.addServlet(new ServletHolder(new HealthServlet()), "/health");

      // Expose Promtheus metrics.
      // context.addServlet(new ServletHolder(new MetricsServlet()), "/metrics");

      // Add metrics about CPU, JVM memory etc.
      DefaultExports.initialize();


      // Start the webserver.
      server.start();
      server.join();
    }
}
